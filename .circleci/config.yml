version: 2.1
commands:
   # Exercise - Rollback
   destroy_environment:
     docker:
       - image: amazon/aws-cli
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  # Exercise: Config and Deployment
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["d2:11:c0:4d:50:e3:6d:95:9e:fa:dd:89:9e:92:ea:5a"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook main.yml -i inventory.txt
    # Exercise: Smoke Testing
  smoke_test: #make it fail
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: test job
          command: |
            URL="https://blog1212.udacity.com/" 
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy_environment
        when: on_fail 

workflows:
  smoke_test-workflow:
    jobs:
      #- configure_infrastructure
      - create_infrastructure
      - smoke_test 
